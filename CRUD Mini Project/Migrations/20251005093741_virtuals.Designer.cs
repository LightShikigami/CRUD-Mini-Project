// <auto-generated />
using System;
using CRUD_Mini_Project.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRUD_Mini_Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251005093741_virtuals")]
    partial class virtuals
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRUD_Mini_Project.Models.Analyse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastUpdateById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("lead_time")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("methodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("method_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("parameterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("parameter_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("sample_typeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("sample_type_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("methodId");

                    b.HasIndex("parameterId");

                    b.HasIndex("sample_typeId");

                    b.ToTable("AnalysesRepository");
                });

            modelBuilder.Entity("CRUD_Mini_Project.Models.Method", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastUpdateById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MethodsRepository");
                });

            modelBuilder.Entity("CRUD_Mini_Project.Models.Parameter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastUpdateById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParametersRepository");
                });

            modelBuilder.Entity("CRUD_Mini_Project.Models.SampleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastUpdateById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SampleTypesRepository");
                });

            modelBuilder.Entity("CRUD_Mini_Project.Models.Analyse", b =>
                {
                    b.HasOne("CRUD_Mini_Project.Models.Method", "method")
                        .WithMany()
                        .HasForeignKey("methodId");

                    b.HasOne("CRUD_Mini_Project.Models.Parameter", "parameter")
                        .WithMany()
                        .HasForeignKey("parameterId");

                    b.HasOne("CRUD_Mini_Project.Models.SampleType", "sample_type")
                        .WithMany()
                        .HasForeignKey("sample_typeId");

                    b.Navigation("method");

                    b.Navigation("parameter");

                    b.Navigation("sample_type");
                });
#pragma warning restore 612, 618
        }
    }
}
